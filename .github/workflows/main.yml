on:
  push:
    branches:
      - master

jobs:
  # create-tag:
  #   name: "Create Git Tag"
  #   runs-on: "ubuntu-latest"
  #   outputs:
  #     tag: ${{ steps.get-tag.outputs.PKG_VERSION }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Get Application Version
  #       id: "get-tag"
  #       shell: "bash"
  #       run: |
  #         echo PKG_VERSION=$(awk -F ' = ' '$1 ~ /version/ { gsub(/["]/, "", $2); printf("%s",$2) }' Cargo.toml) >> $GITHUB_OUTPUT

  #     - name: Set Tag
  #       id: git-tag
  #       shell: "bash"
  #       run: |
  #         git tag v${{ steps.get-tag.outputs.PKG_VERSION }} && git push --tags
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: "Build Image"
    runs-on: ubuntu-latest
    # needs: create-tag
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: ${{ github.ref == 'refs/heads/master' }}
          cache-from: type=registry,ref=ghcr.io/benlepsch/benbot-rs # :${{ needs.create-tag.outputs.tag }}
          cache-to: type=inline
          tags: |
            ghcr.io/benlepsch/benbot-rs # :${{ needs.create-tag.outputs.tag }}
          build-args: |
            git_sha=${{ github.sha }}
